@{
    ViewData["Title"] = "Home Page";
    double variable = app.Program.richardsMethod();

    System.Collections.Generic.List<double> amounts = new System.Collections.Generic.List<double>();
    System.Collections.Generic.List<int> months = new System.Collections.Generic.List<int>();

    MortgageCalculator calc1A = new MortgageCalculator(180000, .035, 1000);
    calc1A.addExtraPayment(12, 2000);

    var tuple = calc1A.sumTotalCosts();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);
    tuple = calc1A.sumTotalCostsWithExtraPayments();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);

    MortgageCalculator calc1B = new MortgageCalculator(180000, .035, 1000);
    calc1B.addExtraPayment(24, 2000);

    tuple = calc1B.sumTotalCosts();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);
    tuple = calc1B.sumTotalCostsWithExtraPayments();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);

    MortgageCalculator calc2A = new MortgageCalculator(300000, .0325, 1500);
    calc2A.addExtraPayment(60, 5000);

    tuple = calc2A.sumTotalCosts();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);
    tuple = calc2A.sumTotalCostsWithExtraPayments();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);

    MortgageCalculator calc2B = new MortgageCalculator(300000, .0325, 1500);
    calc2B.addExtraPayment(120, 5000);

    tuple = calc2B.sumTotalCosts();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);
    tuple = calc2B.sumTotalCostsWithExtraPayments();
    amounts.Add(tuple.Item1);
    months.Add(tuple.Item2);

}

<div class="text-center">
    <h1 class="display-4">Richard's Simulated Mortgate Payoff Calculator</h1>
    <p>Hello! My name is Richard. I unfortunately do not yet have enough experience with HTML to return user input to my program, but I can still provide a simulated experience by calling my methods with preselected values. Enjoy!</p>

    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Employee</legend>
            <div clas="editor-label">
            @Html.LabelFor(model => model.Name)
            </div>
            <div clas="editor-label">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>

        </fieldset>
    }


    <h2>Scenario 1</h2>
    <p>Principal: $180,000</p>
    <p>Interest Rate: 3.5%</p>
    <p>Monthly Payment: $1000</p>
    <p>Months to Payoff: @(months[0].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[0], 2))</p>
    <p><strong>Hypothetical: Pay an additional $2000 at month 12</strong></p>
    <p>Months to Payoff: @(months[1].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[1], 2))</p>
    <p>Months Saved: @(months[0]-months[1])</p>
    <p>Net Savings: $@(System.Math.Round(amounts[0]-amounts[1], 2))</p>

    <h2>Scenario 2</h2>
    <p>Principal: $180,000</p>
    <p>Interest Rate: 3.5%</p>
    <p>Monthly Payment: $1000</p>
    <p>Months to Payoff: @(months[2].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[2], 2))</p>
    <p><strong>Hypothetical: Pay an additional $2000 at month 24</strong></p>
    <p>Months to Payoff: @(months[3].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[3], 2))</p>
    <p>Months Saved: @(months[2]-months[3])</p>
    <p>Net Savings: $@(System.Math.Round(amounts[2]-amounts[3], 2))</p>

    <h2>Scenario 3</h2>
    <p>Principal: $300,000</p>
    <p>Interest Rate: 3.25%</p>
    <p>Monthly Payment: $1500</p>
    <p>Months to Payoff: @(months[4].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[4], 2))</p>
    <p><strong>Hypothetical: Pay an additional $5000 at month 60</strong></p>
    <p>Months to Payoff: @(months[5].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[5], 2))</p>
    <p>Months Saved: @(months[4]-months[5])</p>
    <p>Net Savings: $@(System.Math.Round(amounts[4]-amounts[5], 2))</p>

    <h2>Scenario 4</h2>
    <p>Principal: $300,000</p>
    <p>Interest Rate: 3.25%</p>
    <p>Monthly Payment: $1500</p>
    <p>Months to Payoff: @(months[6].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[6], 2))</p>
    <p><strong>Hypothetical: Pay an additional $5000 at month 120</strong></p>
    <p>Months to Payoff: @(months[7].ToString())</p>
    <p>Total Amount Paid: $@(System.Math.Round(amounts[7], 2))</p>
    <p>Months Saved: @(months[6]-months[7])</p>
    <p>Net Savings: $@(System.Math.Round(amounts[6]-amounts[7], 2))</p>

</div>

